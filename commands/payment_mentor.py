import re
from telegram import Update
from telegram.ext import ConversationHandler

from commands.base_function import back_to_main_menu
from data_base.db import session
from data_base.models import Student
from data_base.operations import update_student_payment, get_student_by_fio_or_telegram


async def confirm_or_reject_payment(update: Update, context):
    """–ú–µ–Ω—Ç–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –ø–ª–∞—Ç–µ–∂."""
    print("üü¢ confirm_or_reject_payment –≤—ã–∑–≤–∞–Ω!")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

    student_telegram = context.bot_data.get("student_telegram")
    payment_text = context.bot_data.get("payment_text")
    mentor_telegram = "@" + update.message.from_user.username  # –ü–æ–ª—É—á–∞–µ–º Telegram –Ω–∏–∫ –º–µ–Ω—Ç–æ—Ä–∞

    if not student_telegram:
        await update.message.reply_text("‚ö† –û—à–∏–±–∫–∞! –ù–µ –Ω–∞–π–¥–µ–Ω —Å—Ç—É–¥–µ–Ω—Ç.")
        return ConversationHandler.END

    # ‚úÖ –ü–æ–ª—É—á–∞–µ–º chat_id —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –ë–î
    student = session.query(Student).filter(Student.telegram == student_telegram).first()
    if not student or not student.chat_id:
        await update.message.reply_text("‚ö† –û—à–∏–±–∫–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ chat_id —Å—Ç—É–¥–µ–Ω—Ç–∞.")
        return ConversationHandler.END
    try:
        amount = float(payment_text)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—É–º–º—É –≤ —á–∏—Å–ª–æ
        if amount <= 0:
            raise ValueError("‚ùå –û—à–∏–±–∫–∞! –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.")
    except ValueError:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, '15000').")
        return ConversationHandler.END

    try:
        update_student_payment(student_telegram, amount, mentor_telegram)
    except RuntimeError as e:
        # ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ–±—É—á–µ–Ω–∏—è
        error_message = str(e)
        if "–ø—Ä–µ–≤—ã—à–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è" in error_message:
            await update.message.reply_text(f"‚ö† –û—à–∏–±–∫–∞! {error_message}")
            await context.bot.send_message(
                chat_id=student.chat_id,
                text="‚ùå –í–∞—à –ø–ª–∞—Ç—ë–∂ –Ω–µ –ø—Ä–∏–Ω—è—Ç, —Ç–∞–∫ –∫–∞–∫ –æ–±—â–∞—è —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è. "
                     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ —Å—É–º–º—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
        else:
            await update.message.reply_text(f"‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error_message}")
        return await back_to_main_menu(update, context)

    # ‚úÖ –ü–ª–∞—Ç—ë–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω ‚Äî —É–≤–µ–¥–æ–º–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏ –º–µ–Ω—Ç–æ—Ä–∞
    await context.bot.send_message(chat_id=student.chat_id, text=f"‚úÖ –í–∞—à –ø–ª–∞—Ç–µ–∂ {payment_text} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!")
    await update.message.reply_text(f"‚úÖ –ü–ª–∞—Ç–µ–∂ {payment_text} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω.")
    return await back_to_main_menu(update, context)


async def reject_payment(update: Update, context):
    """–ú–µ–Ω—Ç–æ—Ä –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –ø–ª–∞—Ç–µ–∂."""
    print("üî¥ reject_payment –≤—ã–∑–≤–∞–Ω!")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    student_telegram = context.bot_data.get("student_telegram")
    payment_text = context.bot_data.get("payment_text")

    if not student_telegram:
        await update.message.reply_text("‚ö† –û—à–∏–±–∫–∞! –ù–µ –Ω–∞–π–¥–µ–Ω —Å—Ç—É–¥–µ–Ω—Ç.")
        return ConversationHandler.END

    # ‚úÖ –ü–æ–ª—É—á–∞–µ–º chat_id —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –ë–î
    student = session.query(Student).filter(Student.telegram == student_telegram).first()
    if not student or not student.chat_id:
        await update.message.reply_text("‚ö† –û—à–∏–±–∫–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ chat_id —Å—Ç—É–¥–µ–Ω—Ç–∞.")
        return ConversationHandler.END

    # ‚úÖ –£–≤–µ–¥–æ–º–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞
    try:
        await context.bot.send_message(
            chat_id=student.chat_id,
            text=f"‚ùå –í–∞—à –ø–ª–∞—Ç–µ–∂ {payment_text} –Ω–µ –ø—Ä–∏–Ω—è—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ–∫ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        )
    except Exception as e:
        await update.message.reply_text(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç—É: {str(e)}")

    await update.message.reply_text(f"‚ùå –ü–ª–∞—Ç–µ–∂ {payment_text} –æ—Ç–∫–ª–æ–Ω—ë–Ω.")
    return await back_to_main_menu(update, context)
