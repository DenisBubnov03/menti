from commands.homework_mentor import *
from data_base.models import Mentor
from data_base.operations import is_mentor, get_student_by_fio_or_telegram, is_admin
from telegram import  ReplyKeyboardMarkup, KeyboardButton


async def start_command(update, context):
    message = update.message
    username = str(message.from_user.username)

    # –î–æ–±–∞–≤–ª—è–µ–º @, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not username.startswith("@"):
        username = "@" + username  # ‚Üê –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º username

    chat_id = message.chat_id  # –ü–æ–ª—É—á–∞–µ–º chat_id

    if is_admin(username):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–¥–º–∏–Ω –ª–∏ —ç—Ç–æ
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton("üí∞ –ü–ª–∞—Ç–µ–∂–∏")],
                [KeyboardButton("üìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è")],
                [KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—Ç–æ—Ä–∞")],
                [KeyboardButton("üì¢ –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")],
                [KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å –º–µ–Ω—Ç–æ—Ä–∞")],
                [KeyboardButton("üìÖ –ó–∞–ø–∏—Å–∏ –Ω–∞ –∑–≤–æ–Ω–∫–∏")]
            ],
            resize_keyboard=True
        )
        await update.message.reply_text("üîπ –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω-–º–µ–Ω—Ç–æ—Ä. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–µ–Ω—Ç–æ—Ä –ª–∏ —ç—Ç–æ
    if is_mentor(username):
        mentor = session.query(Mentor).filter(Mentor.telegram == username).first()
        if mentor:
            if not mentor.chat_id:
                mentor.chat_id = chat_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id
                session.commit()
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton("üìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è")],
                [KeyboardButton("üìÖ –ó–∞–ø–∏—Å–∏ –Ω–∞ –∑–≤–æ–Ω–∫–∏")],
                [KeyboardButton("üìå–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–∞—á–∏ —Ç–µ–º—ã (–µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text("üîπ –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –º–µ–Ω—Ç–æ—Ä. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—Ç—É–¥–µ–Ω—Ç –ª–∏ —ç—Ç–æ
    student = get_student_by_fio_or_telegram(username)
    if student:
        if not student.chat_id:
            student.chat_id = chat_id
            session.commit()
            # ‚úÖ –•–∞—Ä–¥–∫–æ–¥ –º–µ–Ω—Ç–æ—Ä–æ–≤

        manual_mentor = session.query(Mentor).get(1)  # –ú–µ–Ω—Ç–æ—Ä –ø–æ —Ä—É—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
        mentor = session.query(Mentor).get(student.mentor_id) if student.mentor_id else None

        training_type = student.training_type.strip().lower() if student.training_type else ""
        mentor_info = ""

        if training_type == "—Ñ—É–ª–ª—Å—Ç–µ–∫":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–æ–∏—Ö: —Ä—É—á–Ω–æ–π (–∂–µ—Å—Ç–∫–æ) + –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π (auto)
            mentor_info = "\nüë®‚Äçüè´ –ú–µ–Ω—Ç–æ—Ä—ã –¥–ª—è –≤–∞—à–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π:\n"
            mentor_info += f"üíº –†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {manual_mentor.full_name if manual_mentor else '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'} {manual_mentor.telegram if manual_mentor else ''}\n"
            mentor_info += f"üíª –ê–≤—Ç–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {mentor.full_name if mentor else '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'} {mentor.telegram if mentor else ''}"
        elif training_type == "—Ä—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ":
            mentor_info = f"\nüë®‚Äçüè´ –í–∞—à –º–µ–Ω—Ç–æ—Ä –ø–æ —Ä—É—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: {mentor.full_name if mentor else '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'} {mentor.telegram if mentor else ''}"
        elif training_type == "–∞–≤—Ç–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ":
            mentor_info = f"\nüë®‚Äçüè´ –í–∞—à –º–µ–Ω—Ç–æ—Ä –ø–æ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é: {mentor.full_name if mentor else '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'} {mentor.telegram if mentor else ''}"
        else:
            mentor_info = "\n‚ö† –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω —Ç–∏–ø –æ–±—É—á–µ–Ω–∏—è."

        keyboard_buttons = [
            [KeyboardButton("üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–≤–æ–Ω–æ–∫")],
            [KeyboardButton("üìö –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–º–∞—à–∫—É")],
            [KeyboardButton("üí≥ –û–ø–ª–∞—Ç–∞ –∑–∞ –æ–±—É—á–µ–Ω–∏–µ")]
        ]

        # üîç –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç —É—Å—Ç—Ä–æ–∏–ª—Å—è
        if student.training_status.strip().lower() == "—É—Å—Ç—Ä–æ–∏–ª—Å—è":
            keyboard_buttons.append([KeyboardButton("üí∏ –í—ã–ø–ª–∞—Ç–∞ –∫–æ–º–∏—Å—Å–∏–∏")])

        keyboard = ReplyKeyboardMarkup(keyboard_buttons, resize_keyboard=True)
        await update.message.reply_text(f"üîπ –ü—Ä–∏–≤–µ—Ç, {student.fio}! –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ —É—á–µ–Ω–∏–∫.{mentor_info}",
                                        reply_markup=keyboard)
        return
