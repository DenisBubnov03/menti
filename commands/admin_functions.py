from commands.states import BROADCAST_WAITING
from data_base.operations import get_all_students  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
from telegram.ext import ConversationHandler


async def request_broadcast_message(update, context):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –∞–¥–º–∏–Ω–∞ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏"""
    await update.message.reply_text("üì¢ –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:")
    return BROADCAST_WAITING

async def send_broadcast(update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º"""
    text = update.message.text.strip()
    if not text:
        await update.message.reply_text("‚ö† –û—à–∏–±–∫–∞! –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
        return BROADCAST_WAITING

    students = get_all_students()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤

    sent_count = 0
    failed_count = 0

    for student in students:
        if student.chat_id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Å—Ç—É–¥–µ–Ω—Ç–∞ chat_id
            try:
                await context.bot.send_message(chat_id=student.chat_id, text=f"üì¢ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω—Ç–æ—Ä–∞:\n\n{text}")
                sent_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç—É {student.telegram}: {e}")
                failed_count += 1

    await update.message.reply_text(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} —Å—Ç—É–¥–µ–Ω—Ç–∞–º. –ù–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {failed_count}.")
    return ConversationHandler.END
