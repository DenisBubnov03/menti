import functools
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from data_base.db import session
from data_base.models import Student

# –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞
RULES_URL = "https://thankful-candy-c57.notion.site/21794f774aab80d299cdc4d2255ad0a6"

def check_rules_accepted(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∞–≤–∏–ª"""
    @functools.wraps(func)
    async def wrapper(update: Update, context: ContextTypes.DEFAULT_TYPE, *args, **kwargs):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º
        student_telegram = f"@{update.message.from_user.username}"
        student = session.query(Student).filter_by(telegram=student_telegram).first()
        
        # –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—É–¥–µ–Ω—Ç –∏ –æ–Ω –Ω–µ –ø—Ä–∏–Ω—è–ª –ø—Ä–∞–≤–∏–ª–∞
        if student and not student.rules_accepted:
            keyboard = [
                [InlineKeyboardButton("üìñ –ß–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞", url=RULES_URL)],
                [InlineKeyboardButton("üìã –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–∏–Ω—è—Ç–∏—è", callback_data="show_accept")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            message_text = (
                "üö´ **–î–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!**\n\n"
                "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –æ–±—É—á–µ–Ω–∏—è.\n\n"
                "‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º.\n\n"
                "1. –ù–∞–∂–º–∏—Ç–µ ¬´–ß–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞¬ª —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª–∞\n"
                "2. –ü–æ—Å–ª–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ ¬´–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–∏–Ω—è—Ç–∏—è¬ª"
            )
            
            await update.message.reply_text(
                message_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
            return
        
        # –ï—Å–ª–∏ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–Ω—è—Ç—ã –∏–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ç—É–¥–µ–Ω—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        return await func(update, context, *args, **kwargs)
    
    return wrapper

def check_rules_accepted_callback(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∞–≤–∏–ª –≤ callback-—Ñ—É–Ω–∫—Ü–∏—è—Ö"""
    @functools.wraps(func)
    async def wrapper(update: Update, context: ContextTypes.DEFAULT_TYPE, *args, **kwargs):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º
        student_telegram = f"@{update.callback_query.from_user.username}"
        student = session.query(Student).filter_by(telegram=student_telegram).first()
        
        # –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—É–¥–µ–Ω—Ç –∏ –æ–Ω –Ω–µ –ø—Ä–∏–Ω—è–ª –ø—Ä–∞–≤–∏–ª–∞
        if student and not student.rules_accepted:
            keyboard = [
                [InlineKeyboardButton("üìñ –ß–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞", url=RULES_URL)],
                [InlineKeyboardButton("üìã –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–∏–Ω—è—Ç–∏—è", callback_data="show_accept")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            message_text = (
                "üö´ **–î–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!**\n\n"
                "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –æ–±—É—á–µ–Ω–∏—è.\n\n"
                "‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º.\n\n"
                "1. –ù–∞–∂–º–∏—Ç–µ ¬´–ß–∏—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞¬ª —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–∏–ª–∞\n"
                "2. –ü–æ—Å–ª–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ ¬´–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–∏–Ω—è—Ç–∏—è¬ª"
            )
            
            await update.callback_query.answer("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞!")
            await update.callback_query.edit_message_text(
                message_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
            return
        
        # –ï—Å–ª–∏ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–Ω—è—Ç—ã –∏–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ç—É–¥–µ–Ω—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        return await func(update, context, *args, **kwargs)
    
    return wrapper 