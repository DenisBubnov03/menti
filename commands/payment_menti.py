from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ConversationHandler

from commands.base_function import back_to_main_menu
from commands.states import PAYMENT_WAITING, PAYMENT_CONFIRMATION
from data_base.db import session
from data_base.models import Student, Payment

from telegram import Update
from telegram.ext import ConversationHandler
from datetime import datetime
from decimal import Decimal
from data_base.models import Payment, Student
from data_base.db import session
from data_base.operations import get_mentor_by_student
from commands.states import PAYMENT_WAITING


async def request_payment(update: Update, context):
    """–°—Ç—É–¥–µ–Ω—Ç –Ω–∞–∂–∏–º–∞–µ—Ç '–û–ø–ª–∞—Ç–∞ –∑–∞ –æ–±—É—á–µ–Ω–∏–µ'"""
    await update.message.reply_text("üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ (—Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç) –∏ —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '15000').")
    return PAYMENT_WAITING


async def forward_payment(update: Update, context):
    student_telegram = f"@{update.message.from_user.username}"
    message = update.message

    file_id = None
    payment_text = None

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—É–º–º—É –∏ —Ñ–∞–π–ª (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if message.photo:
        file_id = message.photo[-1].file_id
        payment_text = message.caption
    elif message.document:
        file_id = message.document.file_id
        payment_text = message.caption
    elif message.text:
        payment_text = message.text.strip()

    if not payment_text or not payment_text.isdigit():
        await update.message.reply_text("‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, '15000').")
        return PAYMENT_WAITING

    amount = float(payment_text)

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏ –º–µ–Ω—Ç–æ—Ä–∞
    student = session.query(Student).filter(Student.telegram == student_telegram).first()
    mentor = get_mentor_by_student(student_telegram)

    if not student or not mentor:
        await update.message.reply_text("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –º–µ–Ω—Ç–æ—Ä–∞.")
        return ConversationHandler.END

    total_paid = student.payment_amount or Decimal("0")
    total_cost = student.total_cost or Decimal("0")

    if total_paid + amount > total_cost:
        await update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥—ë–Ω–Ω–∞—è —Å—É–º–º–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è.\n"
            f"üí∞ –£–∂–µ –æ–ø–ª–∞—á–µ–Ω–æ: {total_paid} —Ä—É–±.\n"
            f"üìö –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: {total_cost} —Ä—É–±.\n"
            f"–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–Ω–µ –±–æ–ª—å—à–µ {total_cost - total_paid} —Ä—É–±.)"
        )
        return PAYMENT_WAITING

    comment = "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç—ë–∂ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏" if total_paid == 0 else "–î–æ–ø–ª–∞—Ç–∞"

    new_payment = Payment(
        student_id=student.id,
        mentor_id=mentor.id,
        amount=Decimal(str(amount)),
        payment_date=datetime.now().date(),
        comment=comment,
        status="–Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"
    )
    session.add(new_payment)
    session.commit()

    # ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
    await update.message.reply_text("‚úÖ –í–∞—à –ø–ª–∞—Ç—ë–∂ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –º–µ–Ω—Ç–æ—Ä—É.")

    # ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω—Ç–æ—Ä–∞
    mentor_chat_id = 1257163820  # üîí –ñ—ë—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–π ID

    await context.bot.send_message(
        chat_id=mentor_chat_id,
        text=(
            f"üì© –£—á–µ–Ω–∏–∫ {student.telegram} –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–ª–∞—Ç—ë–∂ –Ω–∞ —Å—É–º–º—É {amount:.2f} —Ä—É–±.\n"
            f"üÜî ID –ø–ª–∞—Ç–µ–∂–∞: {new_payment.id}\n"
            f"–°—Ç–∞—Ç—É—Å: –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"
        )
    )

    if file_id:
        await context.bot.send_photo(
            chat_id=mentor.chat_id,
            photo=file_id,
            caption=f"üßæ –ß–µ–∫ –æ—Ç {student.telegram}"
        )

    return ConversationHandler.END



