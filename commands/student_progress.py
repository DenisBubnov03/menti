from telegram import ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ConversationHandler

from commands.base_function import back_to_main_menu
from data_base.operations import get_student_by_fio_or_telegram, is_mentor
from data_base.models import Student, Homework, Payment, ManualProgress
from data_base.db import session
from commands.states import STUDENT_PROGRESS_WAITING
from datetime import datetime, date


async def request_student_progress(update, context):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç Telegram —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]],
        resize_keyboard=True
    )
    await update.message.reply_text(
        "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞\n\n"
        "–í–≤–µ–¥–∏—Ç–µ Telegram —Å—Ç—É–¥–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: @username –∏–ª–∏ username):",
        reply_markup=keyboard
    )
    return STUDENT_PROGRESS_WAITING


async def show_student_progress(update, context):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞"""
    message = update.message.text
    
    if message == "üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–µ–Ω—Ç–æ—Ä–∞
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton("üìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è")],
                [KeyboardButton("üìå –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–∞—á–∏ —Ç–µ–º—ã")],
                [KeyboardButton("üìÖ –ó–∞–ø–∏—Å–∏ –Ω–∞ –∑–≤–æ–Ω–∫–∏")],
                [KeyboardButton("üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "üîπ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard
        )
        return ConversationHandler.END
    
    # –û—á–∏—â–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
    student_telegram = message.strip()
    # if student_telegram.startswith("@"):
    #     student_telegram = student_telegram[1:]
    
    # –ò—â–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
    student = get_student_by_fio_or_telegram(student_telegram)
    
    if not student:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]],
            resize_keyboard=True
        )
        await update.message.reply_text(
            f"‚ùå –°—Ç—É–¥–µ–Ω—Ç —Å Telegram {student_telegram} –Ω–µ –Ω–∞–π–¥–µ–Ω.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=keyboard
        )
        return STUDENT_PROGRESS_WAITING
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
    progress_info = await get_student_progress_info(student)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–µ–Ω—Ç–æ—Ä–∞
    # keyboard = ReplyKeyboardMarkup(
    #     keyboard=[
    #         [KeyboardButton("üìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è")],
    #         [KeyboardButton("üìå –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–∞—á–∏ —Ç–µ–º—ã")],
    #         [KeyboardButton("üìÖ –ó–∞–ø–∏—Å–∏ –Ω–∞ –∑–≤–æ–Ω–∫–∏")],
    #         [KeyboardButton("üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å")],
    #     ],
    #     resize_keyboard=True
    # )
    await update.message.reply_text(
        progress_info,
        # reply_markup=keyboard
    )
    return await back_to_main_menu(update, context)


async def get_student_progress_info(student):
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞"""
    info = f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ\n\n"
    info += f"üë§ –§–ò–û: {student.fio}\n"
    info += f"üì± Telegram: {student.telegram}\n"
    info += f"–î–æ–≥–æ–≤–æ—Ä –ø–æ–¥–ø–∏—Å–∞–Ω: {'–î–∞' if student.contract_signed else '–ù–µ—Ç'}\n"
    info += f"üìÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –æ–±—É—á–µ–Ω–∏—è: {student.start_date.strftime('%d.%m.%Y') if student.start_date else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
    info += f"üéØ –¢–∏–ø –æ–±—É—á–µ–Ω–∏—è: {student.training_type or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
    info += f"üìà –°—Ç–∞—Ç—É—Å –æ–±—É—á–µ–Ω–∏—è: {student.training_status or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
    info += f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è: {student.total_cost or 0} —Ä—É–±.\n"
    info += f"üí≥ –û–ø–ª–∞—á–µ–Ω–æ: {student.payment_amount or 0} —Ä—É–±.\n"
    info += f"‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø–ª–∞—á–µ–Ω–æ: {student.fully_paid or '–ù–µ—Ç'}\n"
    
    if student.company:
        info += f"üè¢ –ö–æ–º–ø–∞–Ω–∏—è: {student.company}\n"
    if student.employment_date:
        info += f"üìÖ –î–∞—Ç–∞ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {student.employment_date.strftime('%d.%m.%Y')}\n"
    if student.salary:
        info += f"üíµ –ó–∞—Ä–ø–ª–∞—Ç–∞: {student.salary} —Ä—É–±.\n"
    if student.commission:
        info += f"üí∏ –ö–æ–º–∏—Å—Å–∏—è: {student.commission}\n"
    if student.commission_paid:
        info += f"üí∏ –í—ã–ø–ª–∞—á–µ–Ω–æ –∫–æ–º–∏—Å—Å–∏–∏: {student.commission_paid} —Ä—É–±.\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö
    homeworks = session.query(Homework).filter(Homework.student_id == student.id).all()
    if homeworks:
        info += f"\nüìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:\n"
        accepted = len([hw for hw in homeworks if hw.status == "–ø—Ä–∏–Ω—è—Ç–æ"])
        rejected = len([hw for hw in homeworks if hw.status == "–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ"])
        pending = len([hw for hw in homeworks if hw.status == "–æ–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏"])
        
        info += f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ: {accepted}\n"
        info += f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ: {rejected}\n"
        info += f"‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {pending}\n"
        info += f"üìä –í—Å–µ–≥–æ: {len(homeworks)}\n"
    else:
        info += f"\nüìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è: –ù–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö
    # payments = session.query(Payment).filter(Payment.student_id == student.id).all()
    # if payments:
    #     info += f"\nüí≥ –ü–ª–∞—Ç–µ–∂–∏:\n"
    #     total_paid = sum(payment.amount for payment in payments)
    #     confirmed_payments = [p for p in payments if p.status == "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"]
    #     pending_payments = [p for p in payments if p.status == "–Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"]
        
    #     info += f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total_paid} —Ä—É–±.\n"
    #     info += f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: {len(confirmed_payments)}\n"
    #     info += f"‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {len(pending_payments)}\n"
    # else:
    #     info += f"\nüí≥ –ü–ª–∞—Ç–µ–∂–∏: –ù–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ —Ä—É—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
    if student.training_type and "—Ä—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" in student.training_type.lower():
        manual_progress = session.query(ManualProgress).filter(ManualProgress.student_id == student.id).first()
        if manual_progress:
            info += f"\nüß† –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ä—É—á–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:\n"
            
            if manual_progress.m1_start_date:
                info += f"üìÖ –ú–æ–¥—É–ª—å 1 –Ω–∞—á–∞—Ç: {manual_progress.m1_start_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m1_submission_date:
                info += f"‚úÖ –ú–æ–¥—É–ª—å 1 —Å–¥–∞–Ω: {manual_progress.m1_submission_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m1_homework:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—é 1: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
            else:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—é 1: ‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
                
            if manual_progress.m2_1_start_date or manual_progress.m2_2_start_date:
                info += f"üìÖ –ú–æ–¥—É–ª–∏ 2.1-2.2 –Ω–∞—á–∞—Ç—ã\n"
            if manual_progress.m2_1_2_2_submission_date:
                info += f"‚úÖ –ú–æ–¥—É–ª–∏ 2.1-2.2 —Å–¥–∞–Ω—ã: {manual_progress.m2_1_2_2_submission_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m2_1_homework:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—è–º 2.1-2.2: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
            else:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—è–º 2.1-2.2: ‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
                
            if manual_progress.m2_3_start_date or manual_progress.m3_1_start_date:
                info += f"üìÖ –ú–æ–¥—É–ª–∏ 2.3-3.1 –Ω–∞—á–∞—Ç—ã\n"
            if manual_progress.m2_3_3_1_submission_date:
                info += f"‚úÖ –ú–æ–¥—É–ª–∏ 2.3-3.1 —Å–¥–∞–Ω—ã: {manual_progress.m2_3_3_1_submission_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m2_3_homework and manual_progress.m3_1_homework:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—è–º 2.3-3.1: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
            else:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—è–º 2.3-3.1: ‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
                
            if manual_progress.m3_2_start_date:
                info += f"üìÖ –ú–æ–¥—É–ª—å 3.2 –Ω–∞—á–∞—Ç: {manual_progress.m3_2_start_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m3_2_submission_date:
                info += f"‚úÖ –ú–æ–¥—É–ª—å 3.2 —Å–¥–∞–Ω: {manual_progress.m3_2_submission_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m3_2_homework:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—é 3.2: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
            else:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—é 3.2: ‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
                
            if manual_progress.m3_3_start_date:
                info += f"üìÖ –ú–æ–¥—É–ª—å 3.3 –Ω–∞—á–∞—Ç: {manual_progress.m3_3_start_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m3_3_submission_date:
                info += f"‚úÖ –ú–æ–¥—É–ª—å 3.3 —Å–¥–∞–Ω: {manual_progress.m3_3_submission_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m3_3_homework:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—é 3.3: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
            else:
                info += f"üìö –î–ó –∫ –º–æ–¥—É–ª—é 3.3: ‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n"
                
            if manual_progress.m4_1_start_date:
                info += f"üìÖ –ú–æ–¥—É–ª—å 4.1 –Ω–∞—á–∞—Ç: {manual_progress.m4_1_start_date.strftime('%d.%m.%Y')}\n"
            if manual_progress.m4_1_submission_date:
                info += f"‚úÖ –ú–æ–¥—É–ª—å 4.1 —Å–¥–∞–Ω: {manual_progress.m4_1_submission_date.strftime('%d.%m.%Y')}\n"
                
            if manual_progress.m4_2_start_date or manual_progress.m4_3_start_date:
                info += f"üìÖ –ú–æ–¥—É–ª–∏ 4.2-4.3 –Ω–∞—á–∞—Ç—ã\n"
            if manual_progress.m4_2_4_3_submission_date:
                info += f"‚úÖ –ú–æ–¥—É–ª–∏ 4.2-4.3 —Å–¥–∞–Ω—ã: {manual_progress.m4_2_4_3_submission_date.strftime('%d.%m.%Y')}\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–≤–æ–Ω–∫–µ
    if student.last_call_date:
        last_call = student.last_call_date
        if isinstance(last_call, str):
            try:
                last_call = datetime.strptime(last_call, "%Y-%m-%d").date()
            except Exception:
                pass  # fallback: –æ—Å—Ç–∞–≤–∏–º —Å—Ç—Ä–æ–∫—É –∫–∞–∫ –µ—Å—Ç—å
        if isinstance(last_call, (datetime, date)):
            info += f"\nüìû –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–≤–æ–Ω–æ–∫: {last_call.strftime('%d.%m.%Y')}\n"
        else:
            info += f"\nüìû –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–≤–æ–Ω–æ–∫: {last_call}\n"
    else:
        info += f"\nüìû –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–≤–æ–Ω–æ–∫: –ù–µ –∑–∞–ø–∏—Å–∞–Ω\n"
    
    return info 