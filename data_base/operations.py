from data_base.db import session
from data_base.models import Student, Mentor, Homework
from datetime import datetime, timedelta
from sqlalchemy import or_, func

def is_admin(username):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º"""
    mentor = session.query(Mentor).filter(Mentor.telegram == username).first()
    if mentor and mentor.is_admin:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–µ is_admin
        return True
    return False

def is_mentor(telegram):
    mentor = session.query(Mentor).filter(Mentor.telegram == str(telegram)).first()
    return mentor is not None

def get_student_by_fio_or_telegram(value):
    """
    –ò—â–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ –§–ò–û –∏–ª–∏ Telegram.
    """
    try:
        return session.query(Student).filter(
            (Student.fio == value) | (Student.telegram == value)
        ).first()
    except Exception as e:
        return None

def get_pending_homework(mentor_username):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    return session.query(Homework).filter(Homework.status == "–æ–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏").all()

def approve_homework(hw_id):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –¥–æ–º–∞—à–∫–∏ –Ω–∞ "–ø—Ä–∏–Ω—è—Ç–æ" –≤ –ë–î"""
    hw = session.query(Homework).filter(Homework.id == hw_id).first()
    if hw:
        hw.status = "–ø—Ä–∏–Ω—è—Ç–æ"
        session.commit()


def update_homework_status(hw_id, comment):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –¥–æ–º–∞—à–∫–∏ –Ω–∞ '–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ' –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"""
    homework = session.query(Homework).filter(Homework.id == hw_id).first()
    if homework:
        homework.status = "–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ"
        homework.comment = comment  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        session.commit()
        return homework.student.telegram  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º Telegram —Å—Ç—É–¥–µ–Ω—Ç–∞
    return None



def get_all_mentors():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–µ–Ω—Ç–æ—Ä–æ–≤"""
    return session.query(Mentor).all()


def get_mentor_chat_id(mentor_username):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç chat_id –º–µ–Ω—Ç–æ—Ä–∞ –ø–æ –µ–≥–æ Telegram username"""
    mentor = session.query(Mentor).filter(Mentor.telegram == mentor_username).first()

    if not mentor:
        return None

    return mentor.chat_id

def update_student_payment(student_telegram, amount):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É–º–º—É –æ–ø–ª–∞—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è"""
    try:
        student = session.query(Student).filter(Student.telegram == student_telegram).first()
        if not student:
            raise ValueError(f"–°—Ç—É–¥–µ–Ω—Ç {student_telegram} –Ω–µ –Ω–∞–π–¥–µ–Ω!")

        new_payment = int(amount)
        if new_payment < 0:
            raise ValueError("–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")

        payment_date = datetime.today()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–ª–∞—Ç–µ–∂ –≤ —ç—Ç–æ–º –∂–µ –º–µ—Å—è—Ü–µ
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–ª–∞—Ç–µ–∂ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ
        if student.extra_payment_date and student.extra_payment_date.strftime("%m.%Y") == payment_date.strftime(
                "%m.%Y"):
            # üîπ –ï—Å–ª–∏ —É–∂–µ –±—ã–ª –ø–ª–∞—Ç—ë–∂ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ ‚Üí —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—É–º–º—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É
            student.extra_payment_amount += new_payment
            student.extra_payment_date = payment_date  # üî• –¢–µ–ø–µ—Ä—å –¥–∞—Ç–∞ —Ç–æ–∂–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è!
        else:
            # üîπ –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –ø–ª–∞—Ç—ë–∂ –≤ –Ω–æ–≤–æ–º –º–µ—Å—è—Ü–µ ‚Üí –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—É–º–º—É –∏ –¥–∞—Ç—É
            student.extra_payment_amount = new_payment
            student.extra_payment_date = payment_date

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É –æ–ø–ª–∞—Ç
        updated_payment = (student.payment_amount or 0) + new_payment

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –æ–ø–ª–∞—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞
        if updated_payment > (student.total_cost or 0):
            session.rollback()
            raise ValueError(
                f"–û—à–∏–±–∫–∞: –æ–±—â–∞—è —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã ({updated_payment:.2f} —Ä—É–±.) "
                f"–ø—Ä–µ–≤—ã—à–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è ({student.total_cost:.2f} —Ä—É–±.)."
            )

        student.payment_amount = updated_payment
        student.fully_paid = "–î–∞" if student.payment_amount >= student.total_cost else "–ù–µ—Ç"

        session.commit()
        return True
    except Exception as e:
        session.rollback()
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞: {e}")


def get_all_students():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ –ë–î"""
    return session.query(Student).all()

def get_student_chat_id(student_telegram):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç chat_id —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ –µ–≥–æ username"""
    student = session.query(Student).filter(Student.telegram == student_telegram).first()
    return student.chat_id if student else None
